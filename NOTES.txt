Architecture
============

src/js
------

main.js
  Loads the query string and initializes App

util.js
  Various polyfills and global functions

App.js
  Main loop which calls update and render methods on Game, Input, Debug, and Mobile

ResourceManager.js
  Handles asynchronous loading of resources (i.e. graphics and audio) and draws the dynamic "Loading..." screen

R.js
  Data structure for ResourceManager; it's augmented by built/R.*.js files generated by the make procedure

Mobile.js
  Draws touch controls and captures touch events

Debug.js
  Provides functionality which doesn't belong in production mode (e.g. teleportation, statusbar, visible hitboxes)

Input.js
  Captures keyboard events to expose whether up/down/left/right/attack/jump have only just been pressed or are being held down


src/js/game
-----------

Game.js
  Finite state machine which handles transitions between Overworld and Area gameplay, as well as player death and gameover; also owns the state of the game, such as health and keys collected

Sprite.js
  Animation-aware entity which subscribes to SpriteGroups and can render itself

SpriteGroup.js
  Buncha Sprites, owned by either Overworld or Area


src/js/game/overworld
---------------------

Overworld.js
  Renders the overworld map, manages OWPlayer, spawns OWEncounters, and finds towns etc. the player moves into

OWPlayer.js
  The player's Sprite on the overworld, does tile-movement

OWEncounter.js
  A blob/monster/fairy Sprite on the overworld, does tile-movement


src/js/game/area
----------------

Area.js
  Manages a sidescrolling area, including spawning entities, rendering the background, and handling collisions

AreaHUD.js
  Renders hearts at the top of the screen

PhysicsSprite.js
  A Sprite which belongs to an Area and knows how to bump into solid tiles

PlayerSprite.js
  The player's PhysicsSprite which handles running, jumping, stabbing, deflecting with shield, getting hurt,

Enemy.js
  A PhysicsSprite which gets stabbed a lot


src/js/game/area/*
------------------

The remaining classes are Sprites (typically Enemies) which make up the entities which the player interacts with in Areas.


Reference URLs
==============

http://localhost/dropbox/canvasgame/index.php
http://dl.dropbox.com/u/29873255/canvasgame/index.html
http://dl.dropbox.com/u/29873255/aolbackup/index.html
http://jsfiddle.net/XxnuD/3/

reference URLs for tiled:
  https://github.com/bjorn/tiled/wiki/Automapping
  https://github.com/bjorn/tiled/wiki/Keyboard-Shortcuts


httpd.conf
==========

Alias /dropbox "C:/Users/Chris/Dropbox/Public/"
<Directory "C:/Users/Chris/Dropbox/Public/">
  Options Indexes FollowSymLinks
  AllowOverride all
  Order allow,deny
  Allow from all
</Directory>

# also, turn on mod_rewrite
